use failure::{Error, Fail};

#[derive(Debug, Fail)]
struct SharkSpotterError<S> {
    kind: SharkSpotterErrorKind,
    message: S
}

enum SharkSpotterErrorKind {
    InvalidIndex,
}

impl<S> SharkSpotterError<S> {
    fn new<S>(kind: SharkSpotterErrorKind, msg: S) -> Self
    where S: Into<String>
    {
        SharkSpotterError {
            kind,
            message: msg.into()
        }
    }
}
